version: '3.8'

services:
    dev:
        container_name: nestjs_api_dev
        image: nestjs-api-dev:1.0.0
        build:
            context: .
            target: development
            dockerfile: ./Dockerfile
        command: npm run start:debug
        ports:
            - 3000:3000
            - 9229:9229
        networks:
            - nesjs-network
        depends_on:
            - mysqldb
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
    prod:
        container_name: nestjs_api_prod
        image: nestjs-api-prod:1.0.0
        build:
            context: .
            target: production
            dockerfile: ./Dockerfile
        command: npm run start:prod
        ports:
            - 3000:3000
            - 9229:9229
        networks:
            - nesjs-network
        depends_on:
            - mysqldb
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
    mysqldb:
        container_name: cuerpo-mysql
        image: mysql:8.0.23
        restart: always
        env_file: ./.env
        environment:
                MYSQL_ROOT_PASSWORD: $DATABASE_PASSWORD
                MYSQL_DATABASE: $DATABASE_NAME
        ports:
                [$DATABASE_LOCAL_PORT:$DATABASE_PORT]
        networks:
            - nesjs-network
        volumes: 
            - db-config:/etc/mysql
            - db-data:/var/lib/mysql
            - ./db/backup/files/:/data_backup/data

networks:
    nesjs-network:
volumes: 
    db-config:
    db-data: